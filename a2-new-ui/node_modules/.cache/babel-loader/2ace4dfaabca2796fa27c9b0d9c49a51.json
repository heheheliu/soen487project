{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport X2JS from 'x2js';\nexport default {\n  name: \"AddAlbum\",\n  data: function data() {\n    return {\n      log: \"\",\n      show: null,\n      yearFrom: \"\",\n      yearTo: \"\",\n      typeLog: \"\",\n      options: [{\n        value: 'update',\n        label: 'UPDATE'\n      }, {\n        value: 'create',\n        label: 'CREATE'\n      }, {\n        value: 'delete',\n        label: 'DELETE'\n      }]\n    };\n  },\n  created: function created() {},\n  methods: {\n    back: function back() {\n      this.$router.back(-1);\n    },\n    searchLog: function searchLog() {\n      var _this = this;\n\n      if (this.yearFrom == \"\" && this.yearTo == \"\" && this.typeLog == \"\" || this.yearFrom && this.yearTo && this.typeLog) {\n        var xmlBody = \"\\n        <soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"\\n                      xmlns:us=\\\"http://www.soen487.com/log-ws\\\">\\n        <soapenv:Header/>\\n        <soapenv:Body>\\n            <us:getChangeLogsRequest>\\n                <us:from>\".concat(this.yearFrom, \"</us:from>\\n                <us:to>\").concat(this.yearTo, \"</us:to>\\n                <us:type>\").concat(this.typeLog, \"</us:type>\\n            </us:getChangeLogsRequest>\\n        </soapenv:Body>\\n        </soapenv:Envelope>\\n        \");\n        axios.post(\"http://localhost:8866/log\", xmlBody, {\n          headers: {\n            \"Content-Type\": \"text/xml\"\n          }\n        }).then(function (res) {\n          var x2js = new X2JS();\n          _this.show = x2js.xml2js(res.data);\n          _this.log = JSON.parse(JSON.stringify(_this.show));\n          _this.log = _this.log.Envelope.Body.getChangeLogsResponse.changedLogs.list;\n        });\n      } else {\n        this.$notify.error({\n          title: 'Error',\n          message: 'Invalid Input'\n        });\n      }\n    },\n    selectType: function selectType(type) {\n      if (type == \"UPDATE\") {\n        return \"\";\n      }\n\n      if (type == \"DELETE\") {\n        return \"danger\";\n      }\n\n      if (type == \"CREATE\") {\n        return \"success\";\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AAEA;AACAA,kBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,aADA;AAEAC,gBAFA;AAGAC,kBAHA;AAIAC,gBAJA;AAKAC,iBALA;AAMAC;AACAC,uBADA;AAEAC;AAFA,SAGA;AACAD,uBADA;AAEAC;AAFA,OAHA,EAMA;AACAD,uBADA;AAEAC;AAFA,OANA;AANA;AAkBA,GArBA;AAsBAC,SAtBA,qBAsBA,CAEA,CAxBA;AAyBAC;AACAC,QADA,kBACA;AACA;AACA,KAHA;AAIAC,aAJA,uBAIA;AAAA;;AACA;AACA,+SAMA,aANA,gDAOA,WAPA,gDAQA,YARA;AAaAC,mBACA,2BADA,EAEAC,OAFA,EAGA;AACAC;AACA;AADA;AADA,SAHA,EAQAC,IARA,CAQA;AACA;AACA;AACA;AACA;AACA,SAbA;AAcA,OA5BA,MA4BA;AACA;AACAC,wBADA;AAEAC;AAFA;AAIA;AACA,KAvCA;AAwCAC,cAxCA,sBAwCAC,IAxCA,EAwCA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAlDA;AAzBA","names":["name","data","log","show","yearFrom","yearTo","typeLog","options","value","label","created","methods","back","searchLog","axios","xmlBody","headers","then","title","message","selectType","type"],"sourceRoot":"src/views","sources":["LogView.vue"],"sourcesContent":["<template>\n  <div class=\"log\">\n    <el-container>\n      <el-header>\n        <el-row>\n          <el-col :span=\"2\" class=\"back\">\n            <i class=\"el-icon-d-arrow-left\" @click=\"back\"></i>\n          </el-col>\n          <el-col :span=\"20\" style=\"text-align: center\">\n            <h1>Check the Log</h1>\n          </el-col>\n        </el-row>\n      </el-header>\n      <el-main>\n        <el-row>\n          <el-col :span=\"6\">\n            <span>From  </span>\n            <el-date-picker\n              v-model=\"yearFrom\"\n              value-format=\"yyyy\"\n              type=\"year\"\n              placeholder=\"Pick a year\">\n            </el-date-picker>\n          </el-col>\n          <el-col :span=\"6\">\n            <span>To  </span>\n            <el-date-picker\n              v-model=\"yearTo\"\n              value-format=\"yyyy\"\n              type=\"year\"\n              placeholder=\"Pick a year\">\n            </el-date-picker>\n          </el-col>\n          <el-col :span=\"6\">\n            <span>Type  </span>\n            <el-select v-model=\"typeLog\" clearable placeholder=\"Select\">\n              <el-option\n                v-for=\"item in options\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-button icon=\"el-icon-search\" circle @click=\"searchLog\"></el-button>\n          </el-col>\n        </el-row>\n        <el-row v-for=\"l in log\" :key=\"l.timestamp\">\n          <el-tag :type=\"selectType(l.type.__text)\" effect=\"dark\">\n            <span>Code: {{ l.isrc.__text }}  *  </span>\n            <span>Type: {{ l.type.__text }}  *  </span>\n            <span>Time: {{ l.timeStamp.__text }}</span>\n          </el-tag>\n        </el-row>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport X2JS from 'x2js';\n\nexport default {\n  name: \"AddAlbum\",\n  data() {\n    return {\n      log: \"\",\n      show: null,\n      yearFrom: \"\",\n      yearTo: \"\",\n      typeLog: \"\",\n      options: [{\n          value: 'update',\n          label: 'UPDATE'\n        }, {\n          value: 'create',\n          label: 'CREATE'\n        }, {\n          value: 'delete',\n          label: 'DELETE'\n      }],\n\n    }\n  },\n  created() {\n\n  },\n  methods: {\n    back() {\n      this.$router.back(-1);\n    },\n    searchLog() {\n      if((this.yearFrom==\"\"&&this.yearTo==\"\"&&this.typeLog==\"\")||(this.yearFrom&&this.yearTo&&this.typeLog)) {\n        let xmlBody = `\n        <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"\n                      xmlns:us=\"http://www.soen487.com/log-ws\">\n        <soapenv:Header/>\n        <soapenv:Body>\n            <us:getChangeLogsRequest>\n                <us:from>${this.yearFrom}</us:from>\n                <us:to>${this.yearTo}</us:to>\n                <us:type>${this.typeLog}</us:type>\n            </us:getChangeLogsRequest>\n        </soapenv:Body>\n        </soapenv:Envelope>\n        `;\n        axios.post(\n          \"http://localhost:8866/log\",\n          xmlBody,\n          {\n            headers: {\n              \"Content-Type\": \"text/xml\"\n            }\n          }\n        ).then((res)=>{\n          var x2js = new X2JS();\n          this.show = x2js.xml2js(res.data);\n          this.log = JSON.parse(JSON.stringify(this.show));\n          this.log = this.log.Envelope.Body.getChangeLogsResponse.changedLogs.list;\n        });\n      } else {\n        this.$notify.error({\n          title: 'Error',\n          message: 'Invalid Input'\n        });\n      }\n    },\n    selectType(type) {\n      if(type==\"UPDATE\") {\n        return \"\";\n      }\n      if(type==\"DELETE\") {\n        return \"danger\";\n      }\n      if(type==\"CREATE\") {\n        return \"success\";\n      }\n    }\n  },\n};\n</script>\n\n<style scoped>\n.log {\n  height: 100%;\n}\n\n.el-container {\n  background-color: #F0DAD2;\n  height:100%;\n}\n\n.item {\n  margin-bottom: 10px;\n}\n\n.back {\n  cursor: pointer;\n}\n\n.el-row {\n  padding: 10px;\n  margin-bottom: 10px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}